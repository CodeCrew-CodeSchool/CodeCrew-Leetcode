[
        {
            "id": 401,
            "title": "Search in Rotated Sorted Array",
            "difficulty": "Medium",
            "description": "Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]). You are given a target value to search. If found in the array, return its index; otherwise, return -1. You may assume no duplicate exists in the array. Your algorithm's runtime complexity must be in the order of O(log n).",
            "examples": [
                {
                    "input": "nums = [4,5,6,7,0,1,2], target = 0",
                    "output": "4"
                },
                {
                    "input": "nums = [4,5,6,7,8,1,2,3], target = 8",
                    "output": "4"
                }
            ]
        },
        {
            "id": 402,
            "title": "Longest Substring Without Repeating Characters",
            "difficulty": "Medium",
            "description": "Given a string, find the length of the longest substring without repeating characters. For example, the longest substring without repeating letters for 'abcabcbb' is 'abc', which the length is 3. For 'bbbbb', the longest substring is 'b', with the length of 1.",
            "examples": [
                {
                    "input": "\"abcabcbb\"",
                    "output": "3"
                },
                {
                    "input": "\"pwwkew\"",
                    "output": "3"
                }
            ]
        },
        {
            "id": 403,
            "title": "Merge Intervals",
            "difficulty": "Medium",
            "description": "Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.",
            "examples": [
                {
                    "input": "intervals = [[1,3],[2,6],[8,10],[15,18]]",
                    "output": "[[1,6],[8,10],[15,18]]"
                },
                {
                    "input": "intervals = [[1,4],[4,5]]",
                    "output": "[[1,5]]"
                }
            ]
        }
    ]